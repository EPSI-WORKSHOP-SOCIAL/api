generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id String @id @default(uuid())

    clerkId String  @unique
    balance Decimal?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    reviews Review[]
}

model Reason {
    id String @id @default(uuid())

    content String

    reviews Review[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Company {
    id String @id @default(uuid())

    name String
    logo String?

    contracts Contract[]
    posts     Post[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Contract {
    id String @id @default(uuid())

    companyId String
    company   Company @relation(fields: [companyId], references: [id], onDelete: NoAction)

    amount     Decimal?
    maxReviews Int?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Post {
    id String @id @default(uuid())

    companyId String
    company   Company @relation(fields: [companyId], references: [id], onDelete: NoAction)

    url         String
    show        Boolean
    origin      String
    isOffensive Boolean

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    reviews Review[]
}

model Review {
    id String @id @default(uuid())

    postId String
    post   Post   @relation(fields: [postId], references: [id], onDelete: NoAction)

    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: NoAction)

    reasonId String?
    reason   Reason? @relation(fields: [reasonId], references: [id], onDelete: NoAction)

    answer Boolean
    price  Decimal?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}